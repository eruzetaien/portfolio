@import "tailwindcss";

:root {
  font-family: system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #242424;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;


  --bluish-white: #DEF1FF;
  --light-green: #8CF3A6;
  --grey: #B6C2CB;
  --main-blue: #4EB2FF;
  --yellow: #FFE66B;

}

body {
  font-family: "Sansation", sans-serif;
  margin: 0;
  display: flex;
  place-items: center;
  min-width: 320px;
  min-height: 100vh;
}

h1 {
  font-size: 3.2em;
  line-height: 1.1;
}
.sprite {
  background-image: url('src/assets/idle-spritesheet.png');
  background-repeat: no-repeat;
  background-size: 300% 100%;
  animation: play 1s steps(3) infinite;
  image-rendering: pixelated;
}

@keyframes play {
  from {
    background-position: 0% 0;
  }
  to {
    background-position: 150% 0;
  }
}

@keyframes play2 {
  from {
    background-position: 0% 0;
  }
  to {
    background-position: -390px 0;
  }
}



.move-animation {
  animation: left-to-right calc(4s * var(--duration)) linear infinite;
}

@keyframes left-to-right {
  0% {
    left: 40%;
    opacity: 0%;
  }
  50% {
    opacity: 100%;
  }
  100% {
    left: 100%;
    opacity: 100%;
  }
}

.float-animation {
  animation-name: float;
  animation-timing-function: ease-in-out;
  animation-iteration-count: infinite;
  animation-duration: 3s;
  animation-direction: alternate;
}

.float-animation:hover {
  animation-play-state: paused;
}

@keyframes float {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-6%);
  }
}

.expand-circle-mask-animation {
  animation: reveal-circle 5s ease-out forwards;
  clip-path: circle(0% at center);
  animation-delay: calc(1s* var(--delay));
}

@keyframes reveal-circle {
  to {
    clip-path: circle(150% at center); /* Expand beyond bounds */
  }
}

.expand-vertical-mask-animation {
  animation: reveal-vertical calc(1s) ease-in forwards;
  clip-path: inset(0 0 100% 0); 
  animation-delay: calc(1s* var(--delay) );
}

@keyframes reveal-vertical {
  to {
    clip-path: inset(0 0 0 0); 
  }
}

.fade-in-animation {
  animation: fade-in calc(1s* var(--duration) ) ease-out forwards;
}
.fade-out-animation {
  animation: fade-out calc(1s* var(--duration) ) ease-in forwards;
}

@keyframes fade-in {
  from { opacity: 0; }
  to { opacity: 1; }
}
@keyframes fade-out {
  from { opacity: 1; }
  to { opacity: 0; }
}

